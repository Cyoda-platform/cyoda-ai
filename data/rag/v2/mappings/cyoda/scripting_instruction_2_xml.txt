**Writing a JavaScript Nashorn script to map the given input to the given Cyoda target entity**

Instruction b7f19c43-3e09-47a1-8e64-1e789f70961e

Here's an example of how to map an input to an entity with a Javascript Nashorn script:

Example input:
<?xml version="1.0" encoding="UTF-8"?>
<complexData>
    <c_entity>
        <integerValue>42</integerValue>
        <stringValue>Hello, XML!</stringValue>
        <person name="John Doe" age="30" />

        <items>
            <item>Item 1</item>
            <item>Item 2</item>
        </items>

        <configurations>
            <configuration key="setting1" value="enabled" />
            <configuration key="setting2" value="disabled" />
        </configurations>

        <company name="Tech Corp">
            <department name="Engineering">
                <employee id="1">
                    <name>Alice</name>
                    <position>Engineer</position>
                </employee>
            </department>
        </company>
    </c_entity>
</complexData>


Example target entity model:
{
  "$": {
    ".c_entity.integerValue": "STRING",
    ".c_entity.stringValue": "STRING",
    ".c_entity.person.name": "STRING",
    ".c_entity.person.age": "STRING",
    ".c_entity.items.item[*]": "(STRING x 2)",
    ".c_entity.company.name": "STRING",
    ".c_entity.company.department.name": "STRING",
    ".c_entity.company.department.employee.id": "STRING",
    ".c_entity.company.department.employee.name": "STRING",
    ".c_entity.company.department.employee.position": "STRING",
    "#.c_entity": "OBJECT",
    "#.c_entity.items": "OBJECT",
    "#.c_entity.configurations": "OBJECT",
    "#.c_entity.company": "OBJECT",
    "#.c_entity.company.department": "OBJECT"
  },
  "$.c_entity.configurations.configuration[*]": {
    ".key": "STRING",
    ".value": "STRING",
    "#": "ARRAY_ELEMENT"
  }
}


Instruction b7f19c43-3e09-47a1-8e64-1e789f70961e

**Writing a JavaScript Nashorn script to map the given input to the given entity model** Instruction
Script example:
var target = entity.modelAccessor;
target.c_entity = {};

// Mapping scalar fields
target.c_entity.integerValue = input.c_entity.complexData.integerValue != null ? String(input.c_entity.complexData.integerValue) : "";
target.c_entity.stringValue = input.c_entity.complexData.stringValue != null ? String(input.c_entity.complexData.stringValue) : "";

// Handling person
target.c_entity.person = {
    name: input.c_entity.complexData.person['@name'] != null ? String(input.c_entity.complexData.person['@name']) : "",
    age: input.c_entity.complexData.person['@age'] != null ? String(input.c_entity.complexData.person['@age']) : ""
};

// Handling items
var ArrayList = Java.type("java.util.ArrayList");
var itemsList = new ArrayList();
if (input.c_entity.complexData.items.item != null) {
    for (var i = 0; i < input.c_entity.complexData.items.item.length; i++) {
        itemsList.add(input.c_entity.complexData.items.item[i]);
    }
}
target.c_entity.items = { item: itemsList };

// Handling configurations
var configurationsList = new ArrayList();
if (input.c_entity.complexData.configurations.configuration != null) {
    for (var j = 0; j < input.c_entity.complexData.configurations.configuration.length; j++) {
        configurationsList.add({
            key: input.c_entity.complexData.configurations.configuration[j]['@key'] != null ? String(input.c_entity.complexData.configurations.configuration[j]['@key']) : "",
            value: input.c_entity.complexData.configurations.configuration[j]['@value'] != null ? String(input.c_entity.complexData.configurations.configuration[j]['@value']) : ""
        });
    }
}
target.c_entity.configurations = { configuration: configurationsList };

// Handling company structure
target.c_entity.company = {
    name: input.c_entity.complexData.company['@name'] != null ? String(input.c_entity.complexData.company['@name']) : "",
    department: {
        name: input.c_entity.complexData.company.department['@name'] != null ? String(input.c_entity.complexData.company.department['@name']) : "",
        employee: {
            id: input.c_entity.complexData.company.department.employee['@id'] != null ? String(input.c_entity.complexData.company.department.employee['@id']) : "",
            name: input.c_entity.complexData.company.department.employee.name != null ? String(input.c_entity.complexData.company.department.employee.name) : "",
            position: input.c_entity.complexData.company.department.employee.position != null ? String(input.c_entity.complexData.company.department.employee.position) : ""
        }
    }
};
