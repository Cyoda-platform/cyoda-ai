    {
        "ai_endpoint": "cyoda",
        "question": "Generate Cyoda design, based on the requirement. Do not forget to explicitly add the entities that you add in the workflow processors, and use only lowercase underscore for namings. Add workflow only where necessary. If the entity is saved in the workflow of another entity (e.g. JOB) then its source will be ENTITY_EVENT. If you have a JOB entity in the design - usually just one JOB entity is enough. If you fail schema validation - check this examle {\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"title\":\"Cyodadesign\",\"type\":\"object\",\"entities\":[{\"entity_name\":\"data_collection_job\",\"entity_type\":\"JOB\",\"entity_source\":\"SCHEDULED\",\"depends_on_entity\":\"None\",\"entity_workflow\":{\"name\":\"data_collection_workflow\",\"class_name\":\"com.cyoda.tdb.model.treenode.TreeNodeEntity\",\"transitions\":[{\"name\":\"collect_data_from_source_a\",\"description\":\"CollectdatafromsourceA.\",\"start_state\":\"None\",\"start_state_description\":\"Initialstatebeforedatacollection.\",\"end_state\":\"data_collected_a\",\"end_state_description\":\"DatafromsourceAhasbeensuccessfullycollected.\",\"process\":{\"name\":\"collect_data_a_process\",\"description\":\"ProcesstocollectrawdatafromsourceA.\",\"adds_new_entites\":\"raw_data_a_entity\"}}]}},{\"entity_name\":\"raw_data_a_entity\",\"entity_type\":\"EXTERNAL_SOURCES_PULL_BASED_RAW_DATA\",\"entity_source\":\"ENTITY_EVENT\",\"depends_on_entity\":\"data_collection_job\",\"entity_workflow\":{}}]}. Use this json schema http://json-schema.org/draft-07/schema# to understand how to structure your answer: {'$schema': 'http://json-schema.org/draft-07/schema#', 'title': 'Cyoda design', 'type': 'object', 'properties': {'entities': {'type': 'array', 'items': {'type': 'object', 'properties': {'entity_name': {'type': 'string'}, 'entity_type': {'type': 'string', 'enum': ['JOB', 'EXTERNAL_SOURCES_PULL_BASED_RAW_DATA', 'WEB_SCRAPING_PULL_BASED_RAW_DATA', 'TRANSACTIONAL_PULL_BASED_RAW_DATA', 'EXTERNAL_SOURCES_PUSH_BASED_RAW_DATA', 'WEB_SCRAPING_PUSH_BASED_RAW_DATA', 'TRANSACTIONAL_PUSH_BASED_RAW_DATA', 'SECONDARY_DATA', 'UTIL', 'CONFIG', 'BUSINESS_ENTITY']}, 'entity_source': {'type': 'string', 'enum': ['API_REQUEST', 'SCHEDULED', 'ENTITY_EVENT']}, 'depends_on_entity': {'type': 'string'}, 'entity_workflow': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'class_name': {'type': 'string', 'enum': ['com.cyoda.tdb.model.treenode.TreeNodeEntity']}, 'transitions': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'description': {'type': 'string'}, 'start_state': {'type': 'string'}, 'start_state_description': {'type': 'string'}, 'end_state': {'type': 'string'}, 'end_state_description': {'type': 'string'}, 'process': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'description': {'type': 'string'}, 'adds_new_entites': {'type': 'string'}}, 'required': ['name', 'description', 'adds_new_entites']}}, 'required': ['name', 'start_state', 'end_state', 'process']}}}, 'required': ['name', 'class_name', 'transitions']}}, 'required': ['entity_name', 'entity_type', 'entity_source', 'depends_on_entity', 'entity_workflow']}}}, 'required': ['entities']}. It will be validated against this schema. Return only json (python dictionary)",
        "answer": "```json\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Cyoda design\",\n  \"type\": \"object\",\n  \"entities\": [\n    {\n      \"entity_name\": \"data_ingestion_job\",\n      \"entity_type\": \"JOB\",\n      \"entity_source\": \"SCHEDULED\",\n      \"depends_on_entity\": \"None\",\n      \"entity_workflow\": {\n        \"name\": \"data_ingestion_workflow\",\n        \"class_name\": \"com.cyoda.tdb.model.treenode.TreeNodeEntity\",\n        \"transitions\": [\n          {\n            \"name\": \"start_data_ingestion\",\n            \"description\": \"Start the data ingestion process from the specified data source.\",\n            \"start_state\": \"None\",\n            \"start_state_description\": \"Initial state before data ingestion.\",\n            \"end_state\": \"data_ingested\",\n            \"end_state_description\": \"Data has been successfully ingested.\",\n            \"process\": {\n              \"name\": \"ingest_raw_data\",\n              \"description\": \"Process to ingest raw data from the specified API.\",\n              \"adds_new_entites\": \"raw_data_entity\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"entity_name\": \"raw_data_entity\",\n      \"entity_type\": \"EXTERNAL_SOURCES_PULL_BASED_RAW_DATA\",\n      \"entity_source\": \"ENTITY_EVENT\",\n      \"depends_on_entity\": \"data_ingestion_job\",\n      \"entity_workflow\": {\n        \"name\": \"raw_data_workflow\",\n        \"class_name\": \"com.cyoda.tdb.model.treenode.TreeNodeEntity\",\n        \"transitions\": []\n      }\n    },\n    {\n      \"entity_name\": \"aggregated_data_entity\",\n      \"entity_type\": \"SECONDARY_DATA\",\n      \"entity_source\": \"ENTITY_EVENT\",\n      \"depends_on_entity\": \"data_ingestion_job\",\n      \"entity_workflow\": {\n        \"name\": \"aggregated_data_workflow\",\n        \"class_name\": \"com.cyoda.tdb.model.treenode.TreeNodeEntity\",\n        \"transitions\": []\n      }\n    },\n    {\n      \"entity_name\": \"report_entity\",\n      \"entity_type\": \"SECONDARY_DATA\",\n      \"entity_source\": \"ENTITY_EVENT\",\n      \"depends_on_entity\": \"data_ingestion_job\",\n      \"entity_workflow\": {\n        \"name\": \"report_workflow\",\n        \"class_name\": \"com.cyoda.tdb.model.treenode.TreeNodeEntity\",\n        \"transitions\": []\n      }\n    }\n  ]\n}\n```"
    },
    {
        "ai_endpoint": "cyoda",
        "question": "Generate Cyoda design, based on the requirement. Do not forget to explicitly add the entities that you add in the workflow processors, and use only lowercase underscore for namings. Add workflow only where necessary. If the entity is saved in the workflow of another entity (e.g. JOB) then its source will be ENTITY_EVENT. If you have a JOB entity in the design - usually just one JOB entity is enough. If you fail schema validation - check this examle {\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"title\":\"Cyodadesign\",\"type\":\"object\",\"entities\":[{\"entity_name\":\"data_collection_job\",\"entity_type\":\"JOB\",\"entity_source\":\"SCHEDULED\",\"depends_on_entity\":\"None\",\"entity_workflow\":{\"name\":\"data_collection_workflow\",\"class_name\":\"com.cyoda.tdb.model.treenode.TreeNodeEntity\",\"transitions\":[{\"name\":\"collect_data_from_source_a\",\"description\":\"CollectdatafromsourceA.\",\"start_state\":\"None\",\"start_state_description\":\"Initialstatebeforedatacollection.\",\"end_state\":\"data_collected_a\",\"end_state_description\":\"DatafromsourceAhasbeensuccessfullycollected.\",\"process\":{\"name\":\"collect_data_a_process\",\"description\":\"ProcesstocollectrawdatafromsourceA.\",\"adds_new_entites\":\"raw_data_a_entity\"}}]}},{\"entity_name\":\"raw_data_a_entity\",\"entity_type\":\"EXTERNAL_SOURCES_PULL_BASED_RAW_DATA\",\"entity_source\":\"ENTITY_EVENT\",\"depends_on_entity\":\"data_collection_job\",\"entity_workflow\":{}}]}. Use this json schema http://json-schema.org/draft-07/schema# to understand how to structure your answer: {'$schema': 'http://json-schema.org/draft-07/schema#', 'title': 'Cyoda design', 'type': 'object', 'properties': {'entities': {'type': 'array', 'items': {'type': 'object', 'properties': {'entity_name': {'type': 'string'}, 'entity_type': {'type': 'string', 'enum': ['JOB', 'EXTERNAL_SOURCES_PULL_BASED_RAW_DATA', 'WEB_SCRAPING_PULL_BASED_RAW_DATA', 'TRANSACTIONAL_PULL_BASED_RAW_DATA', 'EXTERNAL_SOURCES_PUSH_BASED_RAW_DATA', 'WEB_SCRAPING_PUSH_BASED_RAW_DATA', 'TRANSACTIONAL_PUSH_BASED_RAW_DATA', 'SECONDARY_DATA', 'UTIL', 'CONFIG', 'BUSINESS_ENTITY']}, 'entity_source': {'type': 'string', 'enum': ['API_REQUEST', 'SCHEDULED', 'ENTITY_EVENT']}, 'depends_on_entity': {'type': 'string'}, 'entity_workflow': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'class_name': {'type': 'string', 'enum': ['com.cyoda.tdb.model.treenode.TreeNodeEntity']}, 'transitions': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'description': {'type': 'string'}, 'start_state': {'type': 'string'}, 'start_state_description': {'type': 'string'}, 'end_state': {'type': 'string'}, 'end_state_description': {'type': 'string'}, 'process': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'description': {'type': 'string'}, 'adds_new_entites': {'type': 'string'}}, 'required': ['name', 'description', 'adds_new_entites']}}, 'required': ['name', 'start_state', 'end_state', 'process']}}}, 'required': ['name', 'class_name', 'transitions']}}, 'required': ['entity_name', 'entity_type', 'entity_source', 'depends_on_entity', 'entity_workflow']}}}, 'required': ['entities']}. It will be validated against this schema. Return only json (python dictionary)",
        "answer": "```json\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Cyoda design\",\n  \"type\": \"object\",\n  \"entities\": [\n    {\n      \"entity_name\": \"data_ingestion_job\",\n      \"entity_type\": \"JOB\",\n      \"entity_source\": \"SCHEDULED\",\n      \"depends_on_entity\": \"None\",\n      \"entity_workflow\": {\n        \"name\": \"data_ingestion_workflow\",\n        \"class_name\": \"com.cyoda.tdb.model.treenode.TreeNodeEntity\",\n        \"transitions\": [\n          {\n            \"name\": \"scheduled_data_ingestion\",\n            \"description\": \"Triggered by a scheduled job to ingest data.\",\n            \"start_state\": \"None\",\n            \"start_state_description\": \"Initial state before data ingestion.\",\n            \"end_state\": \"data_ingested\",\n            \"end_state_description\": \"Data has been successfully ingested.\",\n            \"process\": {\n              \"name\": \"ingest_raw_data\",\n              \"description\": \"Process to ingest raw data from the specified data source.\",\n              \"adds_new_entites\": \"raw_data_entity\"\n            }\n          },\n          {\n            \"name\": \"aggregate_data\",\n            \"description\": \"Aggregate the ingested raw data.\",\n            \"start_state\": \"data_ingested\",\n            \"start_state_description\": \"Data has been ingested and is ready for aggregation.\",\n            \"end_state\": \"data_aggregated\",\n            \"end_state_description\": \"Data has been successfully aggregated.\",\n            \"process\": {\n              \"name\": \"aggregate_raw_data_process\",\n              \"description\": \"Process to aggregate raw data for reporting.\",\n              \"adds_new_entites\": \"aggregated_data_entity\"\n            }\n          },\n          {\n            \"name\": \"generate_and_send_report\",\n            \"description\": \"Generate a report and send it to admin via email.\",\n            \"start_state\": \"data_aggregated\",\n            \"start_state_description\": \"Data has been aggregated and is ready to be reported.\",\n            \"end_state\": \"report_sent\",\n            \"end_state_description\": \"Report has been successfully sent to admin.\",\n            \"process\": {\n              \"name\": \"generate_report_process\",\n              \"description\": \"Process to create a report and send it via email.\",\n              \"adds_new_entites\": \"report_entity\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"entity_name\": \"raw_data_entity\",\n      \"entity_type\": \"EXTERNAL_SOURCES_PULL_BASED_RAW_DATA\",\n      \"entity_source\": \"ENTITY_EVENT\",\n      \"depends_on_entity\": \"data_ingestion_job\",\n      \"entity_workflow\": {\n        \"name\": \"raw_data_workflow\",\n        \"class_name\": \"com.cyoda.tdb.model.treenode.TreeNodeEntity\",\n        \"transitions\": []\n      }\n    },\n    {\n      \"entity_name\": \"aggregated_data_entity\",\n      \"entity_type\": \"SECONDARY_DATA\",\n      \"entity_source\": \"ENTITY_EVENT\",\n      \"depends_on_entity\": \"data_ingestion_job\",\n      \"entity_workflow\": {\n        \"name\": \"aggregated_data_workflow\",\n        \"class_name\": \"com.cyoda.tdb.model.treenode.TreeNodeEntity\",\n        \"transitions\": []\n      }\n    },\n    {\n      \"entity_name\": \"report_entity\",\n      \"entity_type\": \"SECONDARY_DATA\",\n      \"entity_source\": \"ENTITY_EVENT\",\n      \"depends_on_entity\": \"data_ingestion_job\",\n      \"entity_workflow\": {\n        \"name\": \"report_workflow\",\n        \"class_name\": \"com.cyoda.tdb.model.treenode.TreeNodeEntity\",\n        \"transitions\": []\n      }\n    }\n  ]\n}\n```"
    },