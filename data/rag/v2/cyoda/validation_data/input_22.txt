{"messages": [{"role": "system", "content": "You are a cyoda application builder assistant"}, {"role": "user", "content": "Generate the quart additional api.py file to save the entity data_ingestion_job based on the user suggestions if there are any, if not you can proceed. Use blueprint api_bp_data_ingestion_job = Blueprint('api/data_ingestion_job', __name__) and @api_bp_data_ingestion_job.route respectively. Please use const ENTITY_VERSION for entity version and const cyoda_token for token. User says: "}, {"role": "assistant", "content": "```python \"from quart import Blueprint, request, jsonify\nfrom app_init.app_init import entity_service, cyoda_token\nfrom common.config.config import ENTITY_VERSION\napi_bp_data_ingestion_job = Blueprint(\\'api/data_ingestion_job\\', __name__)\n@api_bp_data_ingestion_job.route(\\'/ingest_data\\', methods=[\\'POST\\'])\nasync def add_data_ingestion_job():\n    \"\"\"\n    Endpoint to add a new data_ingestion_job entity.\n    \"\"\"\n    try:\n        # Get the metadata and data from the request\n        meta = {\n            \"token\": cyoda_token  # Use the constant token for authentication - temporary solution\n        }\n        data = await request.json\n        #saving this entity will trigger the workflow\n        job_id = await entity_service.add_item(\n            meta[\"token\"], \"data_ingestion_job\", ENTITY_VERSION, data\n        )\n        return jsonify({\"message\": \"Data ingestion job added successfully.\", \"id\": job_id}), 201\n    except Exception as e:\n        return jsonify({\"error\": str(e)}), 400\n\"```"}]}