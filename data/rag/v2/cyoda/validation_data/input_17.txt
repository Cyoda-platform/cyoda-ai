{"messages": [{"role": "system", "content": "You are a cyoda application builder assistant"}, {"role": "user", "content": "Generate Cyoda design json, based on the complete prd (\"\"## Entities Overview\\n### 1. Data Ingestion Job (data_ingestion_job)\\n```json\\n{\\n  \"entity_name\": \"data_ingestion_job\",\\n  \"entity_type\": \"JOB\",\\n  \"entity_source\": \"API_REQUEST\",\\n  \"workflow_trigger\": \"scheduled ingestion of cover photos\",\\n  \"data_ingestion_time\": \"2020-01-01\",\\n  \"data_ingestion_id\": \"123\",\\n  \"status\": \"success\"\\n}\\n```\\n- **Description**: This job is responsible for orchestrating the process of retrieving cover photos from the specified API.\\n### 2. Raw Data Entity (raw_data_entity)\\n```json\\n{\\n  \"entity_name\": \"raw_data_entity\",\\n  \"entity_type\": \"EXTERNAL_SOURCES_PULL_BASED_RAW_DATA\",\\n  \"entity_source\": \"ENTITY_EVENT\",\\n  \"data\": [\\n    {\\n      \"id\": 1,\\n      \"url\": \"https://example.com/cover_photo1.jpg\",\\n      \"description\": \"Cover photo for the first book.\"\\n    },\\n    {\\n      \"id\": 2,\\n      \"url\": \"https://example.com/cover_photo2.jpg\",\\n      \"description\": \"Cover photo for the second book.\"\\n    }\\n  ]\\n}\\n```\\n- **Description**: This entity stores the data retrieved from the Cover Photos API, including details of the cover photos.\\n### 3. Report Entity (report_entity)\\n```json\\n{\\n  \"entity_name\": \"report_entity\",\\n  \"entity_type\": \"SECONDARY_DATA\",\\n  \"entity_source\": \"ENTITY_EVENT\",\\n  \"report\": {\\n    \"title\": \"Daily Cover Photo Report\",\\n    \"date_generated\": \"2023-10-10\",\\n    \"summary\": \"This report contains the details of the cover photos ingested from the API.\"\\n  }\\n}\\n```\\n- **Description**: This report entity is created after the data ingestion process, summarizing the details of the cover photos collected.\\n## Workflow Overview\\n### Workflow Flowchart\\n```mermaid\\nflowchart TD\\n  A[Start State] -->|transition: ingest_cover_photos, processor: schedule_ingestion, processor attributes: sync_process=false| B[Raw Data Entity Created]\\n  B -->|transition: generate_report, processor: generate_report, processor attributes: sync_process=true| D[Report Entity Created]\\n  D --> F[End State]\\n```\\n### Workflow Description\\n- The workflow initiates the data ingestion process by triggering the `data_ingestion_job`.\\n- Upon successful ingestion of data, the raw data entity is created.\\n- Finally, the workflow generates a report summarizing the ingested data and creates the report entity.\\n## Event-Driven Architecture\\nThe application employs an event-driven architecture that enables it to respond automatically to various triggers without manual intervention. Key events include:\\n1. **Data Ingestion**: Triggered by the scheduled job to fetch cover photos from the API.\\n2. **Data Processing**: Events that facilitate the transition from raw data to aggregated data and report generation.\\n## Conclusion\\nThe PRD outlines the essential components and functionalities required for the application focused on ingesting, aggregating, and reporting cover photos from an API. By leveraging an event-driven architecture, the application ensures efficient and automated processing of data, ultimately enhancing the user experience for the admin receiving the reports.\\nIf you have any further adjustments or additional requirements, please let me know! I\\'m here to help! \\uD83C\\uDF1F\"\",\n). Use only lowercase underscore for namings. If the entity is saved in the workflow of another entity then its source will be ENTITY_EVENT. The JOB entity_source defaults to API_REQUEST. Prefer entity source/type mentioned in the prd, if it is unclear default to API_REQUEST or ENTITY_EVENT for secondary data. Avoid scheduler unless specified explicitly. You should not change entities or their workflows. You should not omit or add entities which are not listed in the prd. You should follow the complete prd 100% as it was confirmed.. Use this json schema http://json-schema.org/draft-07/schema# to understand how to structure your answer: {'$schema': 'http://json-schema.org/draft-07/schema#', 'title': 'Cyoda design', 'type': 'object', 'properties': {'entities': {'type': 'array', 'items': {'type': 'object', 'properties': {'entity_name': {'type': 'string'}, 'entity_type': {'type': 'string', 'enum': ['JOB', 'EXTERNAL_SOURCES_PULL_BASED_RAW_DATA', 'WEB_SCRAPING_PULL_BASED_RAW_DATA', 'TRANSACTIONAL_PULL_BASED_RAW_DATA', 'EXTERNAL_SOURCES_PUSH_BASED_RAW_DATA', 'WEB_SCRAPING_PUSH_BASED_RAW_DATA', 'TRANSACTIONAL_PUSH_BASED_RAW_DATA', 'SECONDARY_DATA', 'UTIL', 'CONFIG', 'BUSINESS_ENTITY']}, 'entity_source': {'type': 'string', 'enum': ['API_REQUEST', 'SCHEDULED', 'ENTITY_EVENT']}, 'depends_on_entity': {'type': 'string'}, 'entity_workflow': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'class_name': {'type': 'string', 'enum': ['com.cyoda.tdb.model.treenode.TreeNodeEntity']}, 'transitions': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'description': {'type': 'string'}, 'start_state': {'type': 'string'}, 'start_state_description': {'type': 'string'}, 'end_state': {'type': 'string'}, 'end_state_description': {'type': 'string'}, 'process': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'description': {'type': 'string'}, 'adds_new_entites': {'type': 'string'}}, 'required': ['name', 'description', 'adds_new_entites']}}, 'required': ['name', 'start_state', 'end_state', 'process']}}}, 'required': ['name', 'class_name', 'transitions']}}, 'required': ['entity_name', 'entity_type', 'entity_source', 'depends_on_entity', 'entity_workflow']}}}, 'required': ['entities']}. It will be validated against this schema. Return only json (python dictionary)"}, {"role": "assistant", "content": "```json\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Cyoda design\",\n  \"type\": \"object\",\n  \"entities\": [\n    {\n      \"entity_name\": \"data_ingestion_job\",\n      \"entity_type\": \"JOB\",\n      \"entity_source\": \"API_REQUEST\",\n      \"depends_on_entity\": \"None\",\n      \"entity_workflow\": {\n        \"name\": \"data_ingestion_workflow\",\n        \"class_name\": \"com.cyoda.tdb.model.treenode.TreeNodeEntity\",\n        \"transitions\": [\n          {\n            \"name\": \"ingest_cover_photos\",\n            \"description\": \"Trigger to ingest cover photos from the API.\",\n            \"start_state\": \"None\",\n            \"start_state_description\": \"Initial state before data ingestion.\",\n            \"end_state\": \"raw_data_collected\",\n            \"end_state_description\": \"Raw data entity created successfully.\",\n            \"process\": {\n              \"name\": \"schedule_ingestion\",\n              \"description\": \"Process initiating the ingestion of cover photos.\",\n              \"adds_new_entites\": \"raw_data_entity\"\n            }\n          },\n          {\n            \"name\": \"generate_report\",\n            \"description\": \"Generate a report based on the ingested raw data.\",\n            \"start_state\": \"raw_data_collected\",\n            \"start_state_description\": \"State after the raw data has been collected.\",\n            \"end_state\": \"report_entity_created\",\n            \"end_state_description\": \"Report entity has been successfully created.\",\n            \"process\": {\n              \"name\": \"generate_report\",\n              \"description\": \"Process to create a report summarizing the ingested data.\",\n              \"adds_new_entites\": \"report_entity\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"entity_name\": \"raw_data_entity\",\n      \"entity_type\": \"EXTERNAL_SOURCES_PULL_BASED_RAW_DATA\",\n      \"entity_source\": \"ENTITY_EVENT\",\n      \"depends_on_entity\": \"data_ingestion_job\",\n      \"entity_workflow\": {\n        \"name\": \"raw_data_entity_workflow\",\n        \"class_name\": \"com.cyoda.tdb.model.treenode.TreeNodeEntity\",\n        \"transitions\": []\n      },\n      \"data\": [\n        {\n          \"id\": 1,\n          \"url\": \"https://example.com/cover_photo1.jpg\",\n          \"description\": \"Cover photo for the first book.\"\n        },\n        {\n          \"id\": 2,\n          \"url\": \"https://example.com/cover_photo2.jpg\",\n          \"description\": \"Cover photo for the second book.\"\n        }\n      ]\n    },\n    {\n      \"entity_name\": \"report_entity\",\n      \"entity_type\": \"SECONDARY_DATA\",\n      \"entity_source\": \"ENTITY_EVENT\",\n      \"depends_on_entity\": \"raw_data_entity\",\n      \"entity_workflow\": {\n        \"name\": \"report_workflow\",\n        \"class_name\": \"com.cyoda.tdb.model.treenode.TreeNodeEntity\",\n        \"transitions\": []\n      },\n      \"report\": {\n        \"title\": \"Daily Cover Photo Report\",\n        \"date_generated\": \"2023-10-10\",\n        \"summary\": \"This report contains the details of the cover photos ingested from the API.\"\n      }\n    }\n  ]\n}\n``` \n\n### Explanation of the Cyoda Design JSON:\n- **Data Ingestion Job**: The main orchestrating job responsible for ingesting cover photos and generating reports. It includes transitions for both ingestion and report generation.\n- **Raw Data Entity**: Represents the data collected from the API, detailing the cover photos. It is created as a result of the data ingestion job.\n- **Report Entity**: Summarizes the information based on the ingested raw data, capturing key details for reporting purposes.\n\nIf you need any further modifications or have specific requests, just let me know! I'm here to help! \ud83c\udf1f"}]}