{"messages": [{"role": "system", "content": "You are a cyoda application builder assistant"}, {"role": "user", "content": "Generate the quart additional api.py file to save the entity authors_entity based on the user suggestions if there are any, if not you can proceed. Use blueprint api_bp_authors_entity = Blueprint('api/authors_entity', __name__) and @api_bp_authors_entity.route respectively. Please use const ENTITY_VERSION for entity version and const cyoda_token for token. User says: "}, {"role": "assistant", "content": "```python\"from quart import Blueprint, request, jsonify\nfrom app_init.app_init import entity_service, cyoda_token\nfrom common.config.config import ENTITY_VERSION\napi_bp_authors_entity = Blueprint(\\'api/authors_entity\\', __name__)\n@api_bp_authors_entity.route(\\'/add\\', methods=[\\'POST\\'])\nasync def add_authors_entity():\n    \"\"\"API endpoint to add the authors_entity.\"\"\"\n    try:\n        data = await request.get_json()\n        # Process the request to save the authors entity\n        authors_entity_id = await entity_service.add_item(\n            cyoda_token, \"authors_entity\", ENTITY_VERSION, data\n        )\n        return jsonify({\"technical_id\": authors_entity_id}), 201\n    except Exception as e:\n        return jsonify({\"error\": str(e)}), 500\"```"}]}