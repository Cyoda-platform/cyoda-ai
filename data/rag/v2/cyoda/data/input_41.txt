{"messages": [{"role": "system", "content": "You are a cyoda application builder assistant"}, {"role": "user", "content": "Please, return a complete prd."}, {"role": "assistant", "content": "\"# Product Requirements Document (PRD) for Cost of Living Calculation App\\ ## Introduction\\ This document outlines the requirements for developing an application that calculates the cost of living in different countries. The app aims to provide users with accurate and up-to-date information about living expenses across various locations, helping them make informed decisions regarding relocation and travel.\\ ## Objectives\\ - To create a user-friendly application that allows users to input country names and retrieve cost of living data.\\ - To enable comparisons of living expenses between countries.\\ - To present detailed breakdowns of costs, including housing, groceries, and transportation.\\ - To notify users of significant changes in cost of living data for monitored countries.\\ ## User Requirements\\ ### User Stories\\ 1. **As a user,** I want to input the name of the country I am interested in, so that I can get the latest cost of living data for that country.\\ 2. **As a user,** I want to compare the cost of living between my current country and another country, so that I can make informed decisions about relocation.\\ 3. **As a user,** I want to view detailed breakdowns of costs, such as housing, groceries, and transportation, so that I can understand what factors are influencing the overall cost of living.\\ 4. **As a user,** I want to receive notifications if there are significant changes in the cost of living data for countries I am monitoring, so that I can stay updated.\\ ### Journey Diagram\\ ```mermaid\\ journey\\ title User Journey for Cost of Living App\\ section User Inputs Country\\ User inputs country name: 1: User\\ System fetches data: 5: System\\ System displays data: 5: System\\ section Compare Costs\\ User selects countries to compare: 2: User\\ System retrieves comparison data: 4: System\\ System displays comparison results: 4: System\\ section View Details\\ User requests detailed breakdown: 2: User\\ System provides detailed cost categories: 5: System\\ ```\\ ### Sequence Diagram\\ ```mermaid\\ sequenceDiagram\\ participant User\\ participant App\\ participant DataSource\\ User->>App: Input country name\\ App->>DataSource: Fetch cost of living data\\ DataSource-->>App: Return data\\ App->>User: Display cost of living information\\ User->>App: Request comparison\\ App->>DataSource: Fetch comparison data\\ DataSource-->>App: Return comparison data\\ App->>User: Display comparison results\\ ```\\ ## Entity Overview\\ ### Entities Outline\\ 1. **Cost of Living Calculation Entity**\\ - **Description**: Represents the primary job responsible for fetching and calculating the cost of living for specified countries based on user input.\\ - **Workflow**: This entity will have a workflow that orchestrates the entire process of data retrieval and calculation.\\ 2. **Country Data Entity**\\ - **Description**: Holds information about the countries for which the cost of living is being calculated. This entity will store details such as country names and relevant codes.\\ - **Workflow**: This entity will be updated based on API calls to retrieve country information.\\ 3. **Cost Data Entity**\\ - **Description**: Contains detailed information about the cost of living, including various categories like housing, groceries, and transportation.\\ - **Workflow**: The data for this entity will be saved through the workflow of the Cost of Living Calculation entity.\\ 4. **User Notification Entity**\\ - **Description**: Manages notifications sent to users about significant changes in the cost of living data for monitored countries.\\ - **Workflow**: Notifications will be generated and sent via an event-triggered workflow based on updates to the Cost Data Entity.\\ ### Entities Diagram\\ ```mermaid\\ classDiagram\\ class CostOfLivingCalculation {\\ +startProcess()\\ +fetchCountryData()\\ +calculateCostData()\\ +notifyUser()\\ }\\ class CountryData {\\ +getCountryCode()\\ +storeCountryInfo()\\ }\\ class CostData {\\ +addData()\\ +aggregateData()\\ }\\ class UserNotification {\\ +sendNotification()\\ }\\ CostOfLivingCalculation --> CountryData: \\\"uses\\\"\\ CostOfLivingCalculation --> CostData: \\\"calculates\\\"\\ CostOfLivingCalculation --> UserNotification: \\\"sends\\\"\\ ```\\ ### Example JSON Data Models\\ 1. **Cost of Living Calculation Entity**\\ ```json\\ {\\ \\\"job_id\\\": \\\"job_001\\\",\\ \\\"description\\\": \\\"Job to calculate cost of living based on user input.\\\",\\ \\\"status\\\": \\\"completed\\\",\\ \\\"triggered_by\\\": \\\"user_request\\\",\\ \\\"workflow\\\": {\\ \\\"name\\\": \\\"cost_of_living_workflow\\\",\\ \\\"transitions\\\": [\\\"start_process\\\", \\\"fetch_country_data\\\", \\\"calculate_cost_data\\\", \\\"notify_user\\\"]\\ }\\ }\\ ```\\ ### Workflows and Flowcharts\\ #### Cost of Living Calculation Workflow\\ ```mermaid\\ flowchart TD\\ A[Initial State: Before data retrieval.] -->|transition: start_process, processor: calculate_cost_of_living| B[Processing State: Cost of living data is being calculated.]\\ B -->|transition: fetch_country_data, processor: retrieve_country_data| C[Processing State: Country data is being fetched.]\\ C -->|transition: notify_user, processor: send_notification| D[End State: User has been notified of the results.]\\ ```\\ - **Saved via**: Direct API call based on user input.\\ 2. **Country Data Entity**\\ ```json\\ {\\ \\\"country_id\\\": \\\"country_001\\\",\\ \\\"name\\\": \\\"United States\\\",\\ \\\"code\\\": \\\"US\\\",\\ \\\"population\\\": 331002651,\\ \\\"area\\\": 9372610,\\ \\\"capital\\\": \\\"Washington, D.C.\\\"\\ }\\ ```\\ - **Saved via**: EXTERNAL_SOURCES_PULL_BASED_RAW_DATA: API call to fetch country information.\\ 3. **Cost Data Entity**\\ ```json\\ {\\ \\\"data_id\\\": \\\"data_001\\\",\\ \\\"country\\\": \\\"United States\\\",\\ \\\"housing\\\": {\\ \\\"median_rent\\\": 1800,\\ \\\"index\\\": 102\\ },\\ \\\"groceries\\\": {\\ \\\"index\\\": 94\\ },\\ \\\"transportation\\\": {\\ \\\"index\\\": 96\\ },\\ \\\"last_updated\\\": \\\"2023-10-01T10:00:00Z\\\"\\ }\\ ```\\ - **Saved via**: Workflow of the Cost of Living Calculation entity.\\ 4. **User Notification Entity**\\ ```json\\ {\\ \\\"notification_id\\\": \\\"notif_001\\\",\\ \\\"user_id\\\": \\\"user_001\\\",\\ \\\"message\\\": \\\"Significant changes in the cost of living for the United States have been detected.\\\",\\ \\\"status\\\": \\\"sent\\\",\\ \\\"notification_time\\\": \\\"2023-10-01T10:05:00Z\\\"\\ }\\ ```\\ - **Saved via**: Workflow of the Cost of Living Calculation entity.\\ \""}]}