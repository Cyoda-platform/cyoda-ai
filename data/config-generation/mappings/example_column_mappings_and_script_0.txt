Here you can see an example how to do mappings and Javascript Nashorn script.

Pay attention to the fact that only attributes from the target entity matter.
We look for semantically similar attrinutes in the input. And map input attributes to entity attributes.

*Target entity*
```
{
    "net.cyoda.saas.model.TenderEntity": {
      "name": "string",
      "types": [
        "string"
      ],
      "contactUser": "string",
      "systemAccount": true,
      "date": "string",
      "deadlineDate": "string",
      "deadlineLengthDays": 0,
      "category": "string",
      "awardedValue": 0.0,
      "purchaser": "string",
      "notices": [
        {
          "name": "string",
          "id": "string",
          "sid": "string",
          "date": "string",
          "type": "string",
          "srcId": "string",
          "srcUrl": "string",
          "data": "string"
        }
      ]
    }
  },

  {
    "net.cyoda.saas.model.Notice": {
        "name": "string",
        "id": "string",
        "sid": "string",
        "date": "string",
        "type": "string",
        "srcId": "string",
        "srcUrl": "string",
        "data": "string"
    }
}

```
*Input*
```
{
  "name": "Construction of New Office Building",
  "types": [
    "Construction",
    "Development"
  ],
  "contactUser": "John Doe",
  "systemAccount": true,
  "date": "2024-03-28",
  "deadlineDate": "2024-04-30",
  "deadlineLengthDays": 33,
  "category": "Construction Services",
  "awardedValue": 185000,
  "purchaser": "ABC Corporation",
  "notices": [
    {
      "name": "Pre-Bid Conference",
      "id": "NW20240328002",
      "sid": "S003",
      "date": "2024-03-28",
      "type": "Conference",
      "srcId": "SRC003",
      "srcUrl": "https://example.com/notice/NW20240328002",
      "data": "Pre-bid conference scheduled on March 28th, 2024 at 2:00 PM to discuss project specifications."
    },
    {
      "name": "Bid Cancellation Notice",
      "id": "NW20240315001",
      "sid": "S004",
      "date": "2024-03-15",
      "type": "Cancellation",
      "srcId": "SRC004",
      "srcUrl": "https://example.com/notice/NW20240315001",
      "data": "Due to unforeseen circumstances, the bid for Construction of New Office Building has been canceled."
    },
    {
      "name": "Bid Opening Announcement",
      "id": "NW20240430001",
      "sid": "S005",
      "date": "2024-04-30",
      "type": "Bid Opening",
      "srcId": "SRC005",
      "srcUrl": "https://example.com/notice/NW20240430001",
      "data": "Bid opening scheduled on April 30th, 2024 at 9:30 AM. All interested parties invited to attend."
    }
  ]
}
```

*Expected column mappings*
```
[
    {
        "srcColumnPath": "name",
        "dstCyodaColumnPath": "name",
        "dstCyodaColumnPathType": "java.lang.String",
        "dstCollectionElementSetModes": [],
        "transformer": {
            "type": "COMPOSITE",
            "children": [
                {
                    "type": "SINGLE",
                    "transformerKey": "com.cyoda.plugins.mapping.core.parser.valuetransformers.SourceObjectValueTransformer$ToString",
                    "parameters": []
                }
            ]
        }
    },
    {
        "srcColumnPath": "contactUser",
        "dstCyodaColumnPath": "contactUser",
        "dstCyodaColumnPathType": "java.lang.String",
        "dstCollectionElementSetModes": [],
        "transformer": {
            "type": "COMPOSITE",
            "children": [
                {
                    "type": "SINGLE",
                    "transformerKey": "com.cyoda.plugins.mapping.core.parser.valuetransformers.SourceObjectValueTransformer$ToString",
                    "parameters": []
                }
            ]
        }
    },
    {
        "srcColumnPath": "systemAccount",
        "dstCyodaColumnPath": "systemAccount",
        "dstCyodaColumnPathType": "java.lang.Boolean",
        "dstCollectionElementSetModes": [],
        "transformer": {
            "type": "COMPOSITE",
            "children": [
                {
                    "type": "SINGLE",
                    "transformerKey": "com.cyoda.plugins.mapping.core.parser.valuetransformers.SourceObjectValueTransformer$ToBoolean",
                    "parameters": []
                }
            ]
        }
    },
    {
        "srcColumnPath": "date",
        "dstCyodaColumnPath": "date",
        "dstCyodaColumnPathType": "java.lang.String",
        "dstCollectionElementSetModes": [],
        "transformer": {
            "type": "COMPOSITE",
            "children": [
                {
                    "type": "SINGLE",
                    "transformerKey": "com.cyoda.plugins.mapping.core.parser.valuetransformers.SourceObjectValueTransformer$ToString",
                    "parameters": []
                }
            ]
        }
    },
    {
        "srcColumnPath": "deadlineDate",
        "dstCyodaColumnPath": "deadlineDate",
        "dstCyodaColumnPathType": "java.lang.String",
        "dstCollectionElementSetModes": [],
        "transformer": {
            "type": "COMPOSITE",
            "children": [
                {
                    "type": "SINGLE",
                    "transformerKey": "com.cyoda.plugins.mapping.core.parser.valuetransformers.SourceObjectValueTransformer$ToString",
                    "parameters": []
                }
            ]
        }
    },
    {
        "srcColumnPath": "deadlineLengthDays",
        "dstCyodaColumnPath": "deadlineLengthDays",
        "dstCyodaColumnPathType": "java.lang.Integer",
        "dstCollectionElementSetModes": [],
        "transformer": {
            "type": "COMPOSITE",
            "children": [
                {
                    "type": "SINGLE",
                    "transformerKey": "com.cyoda.plugins.mapping.core.parser.valuetransformers.SourceObjectValueTransformer$ToInt",
                    "parameters": []
                }
            ]
        }
    },
    {
        "srcColumnPath": "category",
        "dstCyodaColumnPath": "category",
        "dstCyodaColumnPathType": "java.lang.String",
        "dstCollectionElementSetModes": [],
        "transformer": {
            "type": "COMPOSITE",
            "children": [
                {
                    "type": "SINGLE",
                    "transformerKey": "com.cyoda.plugins.mapping.core.parser.valuetransformers.SourceObjectValueTransformer$ToString",
                    "parameters": []
                }
            ]
        }
    },
    {
        "srcColumnPath": "awardedValue",
        "dstCyodaColumnPath": "awardedValue",
        "dstCyodaColumnPathType": "java.lang.Double",
        "dstCollectionElementSetModes": [],
        "transformer": {
            "type": "COMPOSITE",
            "children": [
                {
                    "type": "SINGLE",
                    "transformerKey": "com.cyoda.plugins.mapping.core.parser.valuetransformers.SourceObjectValueTransformer$ToDouble",
                    "parameters": []
                }
            ]
        }
    },
    {
        "srcColumnPath": "purchaser",
        "dstCyodaColumnPath": "purchaser",
        "dstCyodaColumnPathType": "java.lang.String",
        "dstCollectionElementSetModes": [],
        "transformer": {
            "type": "COMPOSITE",
            "children": [
                {
                    "type": "SINGLE",
                    "transformerKey": "com.cyoda.plugins.mapping.core.parser.valuetransformers.SourceObjectValueTransformer$ToString",
                    "parameters": []
                }
            ]
        }
    }
]
```

*Expected JavaScript Nashorn code*
```JavaScript Nashorn
var ArrayList = Java.type("java.util.ArrayList");
var notices = new ArrayList();
var Notice = Java.type("net.cyoda.saas.model.Notice");

for (var i = 0; i < input.notices.length; i++) {
    var notice = new Notice();
    notice.setName(input.notices[i].name);
    notice.setId(input.notices[i].id);
    notice.setSid(input.notices[i].sid);
    notice.setDate(input.notices[i].date);
    notice.setType(input.notices[i].type);
    notice.setSrcId(input.notices[i].srcId);
    notice.setSrcUrl(input.notices[i].srcUrl);
    notice.setData(input.notices[i].data);
    notices.add(notice);
}

entity.setNotices(notices);
entity.setName(input.name);
entity.setContactUser(input.contactUser);
entity.setSystemAccount(input.systemAccount);
entity.setDate(input.date);
entity.setDeadlineDate(input.deadlineDate);
entity.setDeadlineLengthDays(input.deadlineLengthDays);
entity.setCategory(input.category);
entity.setAwardedValue(input.awardedValue);
entity.setPurchaser(input.purchaser);
```

*Expected JavaScript Nashorn script*
```JSON
{
    "script":{
    "body": "var ArrayList = Java.type(\"java.util.ArrayList\");\nvar notices = new ArrayList();\nvar Notice = Java.type(\"net.cyoda.saas.model.Notice\");\n\nfor (var i = 0; i < input.notices.length; i++) {\n    var notice = new Notice();\n    notice.setName(input.notices[i].name);\n    notice.setId(input.notices[i].id);\n    notice.setSid(input.notices[i].sid);\n    notice.setDate(input.notices[i].date);\n    notice.setType(input.notices[i].type);\n    notice.setSrcId(input.notices[i].srcId);\n    notice.setSrcUrl(input.notices[i].srcUrl);\n    notice.setData(input.notices[i].data);\n    notices.add(notice);\n}\n\nentity.setNotices(notices);\nentity.setName(input.name);\nentity.setContactUser(input.contactUser);\nentity.setSystemAccount(input.systemAccount);\nentity.setDate(input.date);\nentity.setDeadlineDate(input.deadlineDate);\nentity.setDeadlineLengthDays(input.deadlineLengthDays);\nentity.setCategory(input.category);\nentity.setAwardedValue(input.awardedValue);\nentity.setPurchaser(input.purchaser);",
    "inputSrcPaths": [
        "name",
        "contactUser",
        "systemAccount",
        "date",
        "deadlineDate",
        "deadlineLengthDays",
        "category",
        "awardedValue",
        "purchaser",
        "notices/*/name",
        "notices/*/id",
        "notices/*/sid",
        "notices/*/date",
        "notices/*/type",
        "notices/*/srcId",
        "notices/*/srcUrl",
        "notices/*/data"
    ],
    "inputMetaPaths": [],
    "reusableScripts": []
}
}
```