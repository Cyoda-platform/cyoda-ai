Here are the instructions for column mappings:

To generate column mappings from the input to the entity, begin by identifying all semantically related attributes between the input and the entity. 
These attributes should reside at the same hierarchy level in the JSON object and possess identical data types.
For instance, let's create column mappings from this input to the provided entity:
Input
```
{
  "name": "test",
  "status": "active"
}
```
Entity
```
{
    "name": "string",
    "companyStatus": "string",
  }
```
First, let's find all attribute pairs that are semantically close:
name - name
status - companyStatus

For these and all other combinations, you need to provide column mappings in the following form:
```
{
                    "srcColumnPath": "name", // input attribute 
                    "dstCyodaColumnPath": "name", // entity attribute 
                    "dstCyodaColumnPathType": "java.lang.String", // entity datatype
                    "dstCollectionElementSetModes": [], // leave the same as here
                    "transformer": { //leave as here
                        "type": "COMPOSITE",
                        "children": [
                        ]
                    }
                }
```
Let's do a similar example for status - status.

Expected column mapping:
```
{
                    "srcColumnPath": "status", // input attribute 
                    "dstCyodaColumnPath": "companyStatus", // entity attribute 
                    "dstCyodaColumnPathType": "java.lang.String", // entity datatype
                    "dstCollectionElementSetModes": [], // leave the same as here
                    "transformer": { //leave as here
                        "type": "COMPOSITE",
                        "children": [
                        ]
                    }
                }
```
You will be provided with {input_file} and {target_entity}. You will need to produce column mappings from {input_file} to {target_entity}.

```
{
                    "srcColumnPath": "input_attribute_name", // input attribute - replace with real value
                    "dstCyodaColumnPath": "entity_attribute_name", // entity attribute  - replace with real value
                    "dstCyodaColumnPathType": "entity_datatype", // entity datatype - replace with real value
                    "dstCollectionElementSetModes": [], // leave the same as here
                    "transformer": { //leave as here
                        "type": "COMPOSITE",
                        "children": [
                        ]
                    }
                }
```
